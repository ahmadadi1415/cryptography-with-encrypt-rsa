import Head from "next/head";
import { prisma } from "../../lib/prisma";
import axios from 'axios'
import EncryptRSA from "encrypt-rsa"
import { useEffect, useState } from "react";

interface Props {
    messages: Message[],
}

interface Message {
    id: string,
    message: string,
    realMessage: string
}

export default function Messages({ messages }: Props) {

    const [rerender, setRerender] = useState(false)

    async function decrypt(id: string) {
        const response = await axios.get(`/api/message/${id}`)
        const index = messages.findIndex(message => message.id === id)
        messages[index].realMessage = response.data.realMessage
        setRerender(true)
    }

    useEffect(() => {
        setRerender(false)
    }, [messages, rerender])

    return <>
        <Head>
            <title>RSA Encryption</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className="bg-gradient-to-r from-gray-800 to-orange-600 min-h-screen">
            <div className="container">
                <div className="pt-20">
                    <h1 className="text-5xl text-gray-200  text-center font-mono">RSA ENCRYPTION</h1>
                </div>
                <div className="pt-6 mx-32">
                    <p className="text-lg text-left pt-5 font-sans text-gray-50">What is it?</p>
                </div>
                <div className="py-3 mx-20">
                    <div className='text-base text-left font-sans text-gray-50'>
                        RSA encryption is a public-key cryptosystem that is widely used for secure data transmission. It is also one of the oldest. The acronym "RSA" comes from the surnames of Ron Rivest, Adi Shamir and Leonard Adleman, who publicly described the algorithm in 1977. RSA encryption works by using a pair of keys, a public key and a private key. The public key can be shared with anyone, while the private key must be kept secret. To encrypt a message, the sender uses the recipient's public key. To decrypt the message, the recipient uses their private key. RSA encryption is a very secure algorithm, and it is used in a wide variety of applications, including secure email, online banking, and digital signatures.
                    </div>
                </div>
                <div className="text-center py-10 px-52">
                    <table className="w-full border-separate border-spacing-y-2">
                        <thead className="bg-gray-800">
                            <tr className="font-semibold text-lg text-gray-100 ">
                                <td className="w-3/12 py-4 rounded-s-full shadow-xl">ID</td>
                                <td className="w-5/12 py-4 shadow-xl">Encrypted Message</td>
                                <td className="w-4/12 py-4 rounded-e-full shadow-xl">Real Message</td>
                            </tr>
                        </thead>

                        <tbody className="overflow-y-auto h-32">
                            {
                                messages.map(messageData => (
                                    
                                    <tr className="text-gray-300 bg-black bg-opacity-20">
                                        <td className="w-3/12 font-mono rounded-s-full">{messageData.id}</td>
                                        <td className="w-5/12 max-w-prose">
                                            <div className="w-full p-2 overflow-y-auto font-mono">{messageData.message}</div>
                                        </td>
                                        <td className="w-4/12 max-w-prose px-5 rounded-e-full">
                                            {
                                                (!messageData.realMessage) ? (
                                                    <div>
                                                        <button className="focus:bg-black  hover:bg-gray-900 bg-opacity-10 py-2 px-5 shadow-lg rounded-full text-center" type="button" onClick={async () => await decrypt(messageData.id)}>Decrypt!</button>
                                                    </div>
                                                ) : (
                                                    <div className="w-full overflow-y-auto align-middle font-normal text-left py-2">{messageData.realMessage}</div>
                                                )
                                            }
                                        </td>
                                    </tr>
                                ))
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </>

}

export async function getServerSideProps() {
    let messages = await prisma.message.findMany()

    return {
        props: {
            messages
        }
    }
}